(1 | Single | RMI) Sobald ein entferntes Objekt (remote object) exportiert wurde, kann es in der RMI Registry gefunden werden.;Wahr.;Falsch.;;;;-1;;Hallo, ich bin ein Feedbacktext!
(2 | Single | RMI) Java RMI Kommunikation ist verschlüsselt (encrypted).;Wahr.;Falsch.;;;;2;;
(3 | Single | TCP) Der 3-Wege-Handschlag (three way handshake) wird verwendet, um eine TCP Verbindung zu errichten.;Wahr.;Falsch.;;;;-1;;
(4 | Single | RMI) Ein Stub in RMI ist eine Komponente zuständig für:;Serverseitige Kommunikation.;Clientseitige Kommunikation.;;;;-1;;
(5 | Single | Encryption) RSA ist ein Beispiel für ein symmetrisches Verschlüsselungsprotokoll (symmetric encryption protocol).;Wahr.;Falsch.;;;;-1;;
(6 | Single | Concurrency) Wenn eine synchronisierte Methode in Java aufgerufen wird, wird eine Sperre hervorgerufen auf:;Das Object (this).;Die Methode.;Die Klasse.;Die Variablen, welche in der Methode verwendet werden.;;-1;;
(7 | Multi | TCP) Welche Form eines Service wird von TCP bereitgestellt? Wählen Sie alle zutreffenden Antworten aus.;Zuverlässig (reliable);Unzuverlässig (unreliable);Verbindungsorientiert (connection-oriented);Verbindungslos (connection-less);;-1;;
(8 | Single | Concurrency) Wenn auf einer Methode mit der Signatur (im Bild) von zwei Threads mit derselben Objekt-Instanz zugegriffen wird, kann nur jeweils einer der Threads ausgeführt werden.;Wahr.;Falsch.;;;;-1;8.jpg;geändert bzw. umformuliert
(9 | Single | RMI) In RMI muss man für Bootstrapping Absichten, mit der RMI Registry folgendes registrieren:;Alle entfernten Objekte (remote objects);Zumindest ein entferntes Objekt (remote object);;;;-1;;
(10 | Multi | Concurrency) Was sind valide Methoden, um einen threadsicheren 'for-each' Schleifendurchlauf über eine 'List myList1' durchzuführen?;Das Erzeugen eines threadsicheren Wrappers mit 'Collections.synchronizedList(myList1)'.;Synchronisation ist nicht nötig. Ein Durchlauf ist nur eine Serie von Lesezugriffen. ;Das Erzeugen eines synchronisierten Blockes, welcher 'myList1' als Sperrobjekt (lock-object) verwendet.;;;-1;;Hinweis: Betrachten Sie den Fall, dass ein zweiter Thread versucht ein Item zu 'myList1' hinzuzufügen, während die Schleife noch aktiv ist.
(11 | Multi | Socket API) Was passiert, wenn eine 'close()' Methode auf ein 'ServerSocket' aufgerufen wird?;Alle Socket-Verbindungen, welche vom 'ServerSocket' akzeptiert waren, werden geschlossen. ;Der 'ServerSocket' stoppt das Hören nach neuen Verbindungsanfragen (connection requests).;Die verbundenen Clients erhalten eine Exception, dass der 'ServerSocket' geschlossen wurde.;;;-1;;
(12 | Multi | RMI) Welche Parameter-Typen sind gültig für eine entfernte Methode (remote method), die mit RMI verwendet wird?;Primitive Typen.;Serialisierbare Objekte.;Exportierte entfernte Objekte, die nicht notwendigerweise serialisierbar sind.;Alle möglichen Typen sind valide.;;-1;;
(13 | Multi | RMI) Wie kann man ein Objekt, welches 'java.rmi.Remote' implementiert, über RMI entfernt zugänglich (remote accessible) machen?;Indem dessen Klasse 'java.rmi.remote.UnicastRemoteObject' erweitert (extends).;Es ist bereits entfernt zugänglich, da das 'java.rmi.Remote' Interface implementiert wird.;Indem die statische 'exportObject' Methode von 'java.rmi.remote.UnicastRemoteObject' benutzt wird.;Es ist ausreichend das Objekt in der RMI Registry zu binden.;;-1;;
(14 | Single | Socket API) Um eine bidirektionale Kommunikation zwischen einem Server und einem Client über Java Sockets einzurichten: Wie viele Sockets und Streams werden zumindest benötigt?;1 Socket, 1 Output-Stream und 1 Input-Stream auf jeder Seite (2 Sockets, 4 Streams gesamt auf beiden Seiten).;2 Sockets pro Seite, jedes mit 1 Output-Stream und 1 Input-Stream (4 Sockets, 8 Streams gesamt auf beiden Seiten).;1 Socket mit 1 Output-Stream plus 1 Socket mit 1 Input-Stream, auf jeder Seite (4 Sockets, 4 Streams gesamt auf beiden Seiten).;;;-1;;geändert bzw. umformuliert
(15 | Single | RMI) Betrachten Sie die Remote-Interfaces 'MyRemoteA', und 'MyRemoteB', welches eine Methode wie im Bild deklariert. Ist die Signatur von 'foo' valide für eine RMI Remote-Methode?;Ja, die Signatur ist korrekt.;Nein, die Signatur ist inkorrekt.;;;;-1;15.jpg;geändert bzw. umformuliert
(16 | Single | RMI) Betrachten Sie die Remote-Interfaces 'MyRemoteA', und 'MyRemoteB', welches eine Methode wie im Bild deklariert. Ist die Signatur von 'foo' valide für eine RMI Remote-Methode?;Ja, die Signatur ist korrekt.;Nein, die Signatur ist inkorrekt.;;;;-1;16.jpg;geändert bzw. umformuliert
(17 | Single | SocketAPI) Um eine Verbindung mit dem Server-Socket herzustellen, ist es notwendig manuell die lokale Portnummer des Java Client-Sockets zu spezifizieren?;Ja, der lokale Port muss bei der Erzeugung des Client-Sockets spezifiziert werden.;Nein, die zugrundeliegende Plattform wird einen freien Port zufällig auswählen.;Nein, der Client-Socket wird automatisch eine Portnummer mit dem Server-Socket, über das Handschlag-Protokoll, verhandeln.;;;-1;;
(18 | Single | UDP) Wenn zwei Hosts über UDP kommunizieren, müssen beide Seiten dieselbe Portnummer für die UDP Kommunikation verwenden.;Wahr.;Falsch.;;;;-1;;
(19 | Single | RMI) Aufrufe zu entfernten Objekten (remote objects) über RMI sind threadsicher.;Wahr.;Falsch.;;;;-1;;
(20 | Single | Encryption) Symmetrische Verschlüsselungstechniken verwenden öffentliche und private Schlüsselpaare, um Nachrichten zu verschlüsseln und zu entschlüsseln.;Wahr.;Falsch.;;;;-1;;geändert bzw. umformuliert
(21 | Multi | UDP) Welche Aussagen sind für UDP korrekt?;UDP übermittelt verlorene Pakete neu.;UDP ist ein verbindungsloses (connectionless) Protokoll.;UDP garantiert, dass Pakete in der Reihenfolge empfangen werden, in der sie gesendet wurden.;UDP ist nützlich, wenn der Verlust von individuellen Paketen unwichtig ist.;;-1;;
(22 | Multi | Base64) Was sind die Vorteile der Verwendung der Base64 Codierung?;Die Sicherheit wird verbessert, nachdem die Daten zusätzlich mit Base64 verschlüsselt werden.;Es ist möglich jede Form von Daten als Text-String zu übermitteln.;Der Daten-Durchsatz steigt, aufgrund der höheren Bit-Rate von Base64.;Kontrollzeichen werden zu druckbaren ASCII Zeichen konvertiert.;;-1;;
(23 | Single | Protocols) Welche Aussagen sind für Namensauflösung (name resolution) korrekt?;Rekursive Namensauflösung produziert höhere Client-Namerserver Kommunicationskosten als der iterative Ansatz.;Iterative Namensauflösung produziert einen geringeren Berechnungsaufwand für jeden Namensserver, verglichen mit dem rekursiven Ansatz.;;;;-1;;
(24 | Multi | Concurrency) Welche Aussagen sind für Daten und Multithreading korrekt?;Wenn ein Java Programm mit mehreren Threads auf einer einzelnen CPU läuft, werden die Operationen aller nebenläufigen Threads sequentiell ausgeführt. Die Reihenfolge ist dabei nicht-deterministisch.;Die JVM führt automatisch Synchronisierung durch, wenn mehrere Threads versuchen Daten zu manipulieren.;Der Programmierer muss sicherstellen, dass nebenläufiger Zugriff auf Daten von mehreren Threads, synchronisiert abläuft.;Objekte, die durch andere Threads weitergereicht werden, werden automatisch als tiefe Kopien weitergereicht, um threadsicherheit zu gewährleisten.;;-1;;geändert bzw. umformuliert
(25 | Multi | RMI) Welche Aussagen sind für Java RMI korrekt?;Damit ein Objekt als entferntes Objekt exportiert werden kann, ist es ausreichend, dass es ein beliebiges Interface implementiert.;Jedes entfernte Objekt muss in einer RMI Registry gebunden sein.;Jede Subklasse von 'java.lang.Exception' kann von entfernten Objekten geworfen werden.;;;-1;;
(26 | Single | SocketAPI) Welche Typen von Verbindungen akzeptiert 'java.net.ServerSocket'?;UDP Verbindungen.;TCP Verbindungen.;TCP und UDP Verbindungen.;;;-1;;
(27 | Multi | Message integrity) Hash-basierte Nachrichten Authentifizierungscodes (HMAC) werden verwendet für:;Verifikation der Quelle einer Nachricht.;Verifikation, dass eine Nachricht nicht von einer dritten Person gelesen werden kann.;Verifikation der Integrität einer Nachricht.;;;-1;;
(28 | Multi | Encryption) Welche Aussagen sind für symmetrische Verschlüsselung korrekt?;RSA ist ein Beispiel für symmetrische Verschlüsselung.;AES ist ein Beispiel für symmetrische Verschlüsselung.;Derselbe Schlüssel wird für die Verschlüsselung und Entschlüsselung verwendet.;;;-1;;
(29 | Multi | Security) Was ist wahr über das Challenge-Response Authentifizierungsprotokoll aus dem Lab?;Der Zweck ist es, sicher gegen wiederholte Attacken zu sein. Eine einmal gültige Übertragung wird auf betrügerische Weise wiederholt oder verzögert.;Während dem Handschlag (handshake) verwendet der Sender den privaten Schlüssel des Empfängers für die Verschlüsselung.;Der initiale Handschlag, verschlüsselt mit RSA, wird verwendet, um die AES Schlüssel sicher auszutauschen.;;;-1;;
(30 | Multi | Concurrency) Welche Aussagen bezüglich der Nebenläufigkeit und Synchronisation in Java sind korrekt?;Wenn auf 'java.util.HashMap' nur über eine getter-Methode zugegriffen wird, kann man die 'HashMap' threadsicher machen, indem man das Schlüsselwort 'synchronized' vor diese getter-Methode schreibt.;Eine 'java.util.HashMap' kann eine 'ConcurrentModificationException' werfen, selbst mit einer vollkommend richtigen Synchronisierung.;Falls eine Klasse als 'synchronized' definiert wurde, z.B. 'public synchronized class Foo', so sind alle Methoden dieser Klasse automatisch threadsicher.;Das Hinzufügen des 'synchronized' Modifiers zur Methodensignatur, ist effektiv äquivalent mit der Umschließung des Methodenkörpers mit einem 'synchronized(this){}' Block.;;-1;;geändert bzw. umformuliert
(31 | Single | TCP) Welche Aussagen sind korrekt, bezüglich TCP und UDP Sockets in Java?;TCP und UDP Sockets können dieselbe Portnummer zu derselben Zeit benutzen.;Falls ein UDP Socket anfängt auf demselben Port wie das TCP Socket zu hören, so wird das TCP Socket geschlossen.;;;;-1;;
(32 | Single | SocketAPI) Ähnlich wie 'java.net.Socket', müssen die Input-/Output-Streams geschlossen werden.;Wahr.;Falsch.;;;;-1;;
(33 | Multi | Protocols) Welche Eigenschaften hat das DMAP (DSLab Message Access Protocol) Protokoll?;Zustandslos (stateless);Klartext (plain-text);Zustandsbehaftet (stateful);Binär (binary);;-1;;
(34 | Multi | Protocols) Welche Eigenschaften hat das DMTP (DSLab Message Transfer Protocol) Protokoll?;Binär (binary);Klartext (plain-text);Asynchron;Synchron;;-1;;
(35 | Single | TCP) Welche Prozedur wird verwendet, um eine TCP Verbindung einzurichten?;Request-/Response-Nachrichten;2-Wege Handschlag;3-Wege Handschlag;TCP braucht keine Einrichtung einer Verbindung.;;-1;;
(36 | Single | UDP) Welche Prozedur wird verwendet, um eine UDP Verbindung einzurichten?;Request-/Response-Nachrichten;2-Wege Handschlag;3-Wege Handschlag;UDP braucht keine Einrichtung einer Verbindung.;;-1;;
(37 | Single | Protocols) Auf welcher Ebene des Iso-Osi-Modells operiert das DMTP Protokoll (DSLab Message Transfer Protocol)?;Ebene 7: Anwendungsschicht (Application Layer);Ebene 4: Transportschicht (Transport Layer);Ebene 3: Netzwerk-Schicht (Network Layer);Ebene 2: Sicherungsschicht (Data Link Layer);;-1;;DMTP??
(38 | Single | Protocols) Auf welcher Ebene des Iso-Osi-Modells operiert das DMAP Protokoll (DSLab Message Access Protocol)?;Ebene 7: Anwendungsschicht (Application Layer);Ebene 4: Transportschicht (Transport Layer);Ebene 3: Netzwerk-Schicht (Network Layer);Ebene 2: Sicherungsschicht (Data Link Layer);;-1;;DMAP??
(39 | Single | Message integrity) Um einen Hash-basierten Nachrichten-Authentifizierungscode (HMAC) zu erstellen, benötigt man?;Ein geteiltes Geheimnis bzw. einen geteilten Schlüssel (a shared secret);Einen öffentlichen und einen privaten Schlüssel (a public and private key);Nur eine passende Hash-Funktion;;;-1;;
(40 | Multi | Message integrity) Nachrichten-Integrität bedeutet, dass ...;die Daten der Nachricht während der Übertragung nicht beschädigt werden können.;die Daten der Nachricht verschlüsselt werden.;die Daten der Nachricht nicht von einer dritten Person oder Partei (third party) gelesen werden können.;die Daten der Nachricht nicht von einer dritten Person oder Partei (third party) manipuliert werden können.;;-1;;
(41 | Multi | Base64) Welche Aussagen über Base64 Kodierung sind korrekt?;Base64 fügt eine zusätzliche Schicht an Sicherheit (Security) hinzu.;Base64 übersetzt binäre Daten in druckbare ASCII-Zeichen.;Base64 ist notwendig, um Binärdaten über einen TCP-Kanal zu schicken.;Base64 kodierte Daten erhöhen den Netzwerk-Traffic.;;-1;;
(42 | Multi | Base64) Welche Aussagen über Base64 Kodierung sind korrekt?;Base64 ist ein hash-basiertes Kodierungs-Schema (hash-based encoding scheme).;Base64 kodierte Nachrichten sind weniger anfällig gegen Man-In-The-Middle Angriffe.;Base64 Kodierung erhöht die Größe der Nachrichten.;Base64 Kodierung ist notwendig, um Binärdaten über einen Text-Kanal zu senden.;;-1;;
(43 | Single | Concurrency) Der Code im Bild liest von einem Netzwerk-Socket.Der Socket wartet auf Daten, aber sein Thread wird durch einen Aufruf von 'Thread.interrupt()' unterbrochen.Was passiert?;'null' wird auf System.out ausgegeben, und die Schleife wird beendet.;Gar nichts, weil readLine() weiter blockiert.;Eine InterruptedException wird geworfen, und die Methode endet.;;;-1;43.jpg;
(44 | Single | Concurrency) Der Code im Bild liest von einem Netzwerk-Socket.Der Socket wartet auf Daten, aber sein Thread wird durch einen Aufruf von 'Thread.interrupt()' unterbrochen.Was passiert?;Gar nichts, weil readLine() weiter blockiert.;'null' wird auf System.out ausgegeben, und die Methode endet.;'interrupted' wird auf System.out ausgegeben, und die Methode endet.;;;-1;44.jpg;
(45 | Multi | RMI) Welche Parameter-Typen sind gültig für eine mit RMI genutzte entfernte Methode? Nehmen Sie dazu an, dass Server und Client auf den gleichen Code Zugriff haben.;Primitive Typen.;Alle Objekte, die keine anderen komplexen Typen, wie etwa Collections, beinhalten.;Alle vollständig serialisierbaren Objekte.;Alle Objekte, die nur primitive Typen als Variablen haben.;Verweise auf andere enternte Objekte;-1;;
(46 | Single | RMI) Welche Typen von Exceptions können in der throws-Klausel einer entfernt zugreifbaren Methoden (remote object method) benutzt werden?;Nur solche, die von 'java.rmi.RemoteException' erben (extends);Alle Exceptions, die von 'java.lang.Exception' erben (extends);Nur solche, die von 'java.rmi.RuntimeException' erben (extends);;;-1;;
(47 | Multi | RMI) Welche Aussagen über RMI sind korrekt?;Es ist die objekt-orientierte Variante von Remote Procedure Calls (RPCs).;Es benutzt das Publish-Subscibe Nachrichten-Muster.;Es vereinfacht die Koordination von nebenläufigen (Multi-Threaded) Programmen.;Es vereinfacht den Datenaustausch zwischen Java Programmen.;;-1;;
(48 | Multi | RMI) Welche Aussagen über RMI sind korrekt?;Es erlaubt Programmen, die in verschiedenen Java Virtual Machines laufen, zu kommunizieren.;Es ist das objekt-orientierte Äquivalent zu TCP.;Es ist eine API, die Netzwerk-Kommunikation vor dem Programmierer versteckt.;Es vereinfacht den Daten-Austausch zwischen Programmen, die in unterschiedlichen Sprachen geschrieben wurden.;E;-1;;
(49 | Multi | RMI) Welche Aussagen über RMI sind korrekt?;Es erlaubt Programmen, die in verschiedenen Java Virtual Machines laufen, zu kommunizieren.;Es ist das objekt-orientierte Äquivalent zu entfernten Prozeduraufrufen (Remote Procedure Calls, RPCs).;Es vereinfacht Security-Mechanismen.;Es vereinfacht den Daten-Austausch zwischen Programmen, die in unterschiedlichen Sprachen geschrieben wurden.;;-1;;
(50 | Single | Encryption) Welcher Schlüssel wird bei asymmetrischer Verschlüsselung benutzt, um eine Nachricht zu verschlüsseln (encrypt)?;Der private Schlüssel des Senders der Nachricht.;Der private Schlüssel des Empfängers der Nachricht.;Der öffentliche Schlüssel des Senders der Nachricht.;Der öffentliche Schlüssel des Empfängers der Nachricht.;Der zwischen Sender und Empfänger geteilte Schlüssel.;-1;;
(51 | Single | Encryption) Welcher Schlüssel wird bei asymmetrischer Verschlüsselung benutzt, um eine Nachricht zu entschlüsseln (decrypt)?;Der private Schlüssel des Senders der Nachricht.;Der private Schlüssel des Empfängers der Nachricht.;Der öffentliche Schlüssel des Senders der Nachricht.;Der öffentliche Schlüssel des Empfängers der Nachricht.;Der zwischen Sender und Empfänger geteilte Schlüssel.;-1;;
(52 | Single | Encryption) Welcher Schlüssel wird bei symmetrischer Verschlüsselung benutzt, um eine Nachricht zu verschlüsseln (encrypt)?;Der private Schlüssel des Senders der Nachricht.;Der private Schlüssel des Empfängers der Nachricht.;Der öffentliche Schlüssel des Senders der Nachricht.;Der öffentliche Schlüssel des Empfängers der Nachricht.;Der zwischen Sender und Empfänger geteilte Schlüssel.;-1;;
(53 | Single | Encryption) Welcher Schlüssel wird bei symmetrischer Verschlüsselung benutzt, um eine Nachricht zu entschlüsseln (decrypt)?;Der private Schlüssel des Senders der Nachricht.;Der private Schlüssel des Empfängers der Nachricht.;Der öffentliche Schlüssel des Senders der Nachricht.;Der öffentliche Schlüssel des Empfängers der Nachricht.;Der zwischen Sender und Empfänger geteilte Schlüssel.;-1;;
(54 | Multi | TCP) Welche Aussagen über TCP sind korrekt?;TCP überträgt verloren gegangene Pakete automatisch neu.;TCP ist ein verbindungsloses Protokoll (connectionless).;TCP garantiert, dass Pakete in der gleichen Reihenfolge empfangen werden, wie sie gesendet wurden.;TCP ist besonders dann nützlich, wenn es nicht wichtig ist, ob Pakete verloren gehen.;;-1;;
(55 | Multi | Protocols) Welche Aussagen über das 'startsecure' Handschlag-Protokoll aus dem Lab sind korrekt?;Es schützt vor Wiederholungsangriffen, eine einmal gültige Übertragung wird auf betrügerische Weise wiederholt oder verzögert.;Während dem Handschlag benutzt der Sender den Privaten Schlüssel des Empfängers für die Verschlüsselung.;Der initiale Handschlag, verschlüsselt mittels RSA, wird verwendet um AES Schlüssel sicher auszutauschen.;;;-1;;
(56 | Multi | Protocols) Welche Aussagen über das 'startsecure' Handschlag-Protokoll aus dem Lab sind korrekt?;Es schützt vor Wiederholungsangriffen, eine einmal gültige Übertragung wird auf betrügerische Weise wiederholt oder verzögert.;Während dem Handschlag benutzt der Sender den Privaten Schlüssel des Empfängers für die Verschlüsselung.;Der initiale Handschlag, verschlüsselt mittels AES, wird verwendet um AES Schlüssel sicher auszutauschen.;Nach dem Handshake werden die über das Netzwerk übertragenen Daten, von Klartext in Binärformat geändert.;;-1;;
(57 | Multi | Concurrency) Welche der Code-Fragemente im Bild sind gültige Möglichkeiten, einen threadsicheren, konsistenten und atomaren Im-Speicher ID-Generator zu bauen?;A;B;C;D;;-1;55.jpg;
(58 | Multi | Concurrency) Welche Möglichkeiten gibt es, um eine Mail-Weiterleitung, gemäß dem Lab, im TransferServer zu implementieren?;Die DMTP-Verbindungshandler können Mails in 'java.util.concurrent.BlockingQueue' schreiben, und einen Worker-Thread für das ständige Lesen und Weiterleiten der E-Mails verwenden.;Verwende einen Executor von 'Executors.newFixedThreadPool' und lasse die DMTP Verbindungshandler neue 'MailForwarder' Threads über den Executor einreichen.;Verwende einen Executor von 'Executors.newCachedThreadPool' und lasse die DMTP Verbindungshandler neue 'MailForwarder' Threads über den Executor einreichen.;Lasse DMTP Verbindungshandler einen neuen 'MailForwarder' Thread erzeugen, nachdem jede Nachricht empfangen wurde.;;-1;;
(59 | Multi | Concurrency) Was passiert, wenn die 'shutdown()' Methode eines 'java.util.concurrent.ExecutorService' aufgerufen wird?;Alle Threads, die dem Executor übermittelt wurden, werden beendet.;Der Thread, der den Executor ausführt, wird beendet.;Der Executor nimm keine neuen Threads mehr an.;Die Methode blockiert, bis alle Threads, die dem Executor übermittelt wurden, beendet wurden.;;-1;;
(60 | Multi | Concurrency) Die Klasse im Bild sei gegeben. Zwei Threads haben die gleiche Instanz eines Worker-Objekts, Thread 1 ruft worker.foo() auf, und Thread 2 worker.bar(). Was passiert?;Thread 1 muss warten, bis Thread 2 beendet ist.;Thread 1 und Thread 2 können gleichzeitig ausgeführt werden.;;;;-1;58.jpg;
(61 | Single | RMI) Wenn ein Objekt eine Instanz von 'java.rmi.server.UnicastRemoteObject' ist, dann implentiert es automatisch auch das 'java.io.Serializable' Interface.;Wahr.;Falsch.;;;;-1;;
(62 | Single | RMI) Um ein Objekt über RMI zugänglich zu machen, genügt es, dass seine Klasse das 'Remote' Interface implementiert. Jeder Aufruf wird von einer einzigen Instanz der Klasse bearbeitet.;Wahr.;Falsch.;;;;-1;;
(63 | Single | RMI) In Java RMI ist die einzige Möglichkeit, eine Referenz auf ein entferntes Objekt (remote object) zu bekommen, eine Registry zu benutzen.;Wahr.;Falsch.;;;;-1;;
(64 | Single | Encryption) Asymmetrische Krypto: Damit nur der beabsichtige Empfänger eine Nachricht entschlüsseln kann, muss man diese mit dem öffentlichen Schlüssel des Empfängers verschlüsseln.;Wahr.;Falsch.;;;;-1;;
(65 | Single | Encryption) Asymmetrische Krypto: Damit nur der beabsichtige Empfänger eine Nachricht entschlüsseln kann, muss man diese mit dem privaten Schlüssel des Absenders verschlüsseln.;Wahr.;Falsch.;;;;-1;;
(66 | Single | Concurrency) Um Code in einem neuen Thread auszuführen, kann man eine Klasse mit Interface 'Executable' schreiben, und einen neuen Thread erzeugen, der den Code der Klasse ausführt.;Wahr.;Falsch.;;;;-1;;noch ok?
(67 | Single | RMI) Für Parameter eines RMI Methodenaufrufs kann man Pass-By-Value für Remote Objects, oder Pass-By-Reference für primitive Typen und Objekte, die Serializable unterstützen, benutzen.;Wahr.;Falsch.;;;;-1;;noch ok?
(68 | Single | Encryption) Asymmetrische Kryptographie: Eine Nachricht kann nur mittels öffentlichem Schlüssel verschlüsselt werden, und nur mittels privatem Schlüssel entschlüsselt werden.;Wahr.;Falsch.;;;;-1;;
(69 | Multi | Encryption) Welche Aussagen zur Kryptographie sind korrekt?;Asymmetrische Kryptographie ist deutlich schneller als symmetrische Kryptographie.;Wenn möglich, sollte asymmetrische der symmetrischen Kryptographie vorgezogen werden.;Asymmetrische Kryptographie kann sowohl zur Verschlüsselung als auch für Signaturen verwendet werden.;Der Austausch eines geteilten Schlüssels in der symmetrischen Kryptographie beinhaltet große mögliche Risiken;;-1;;
(70 | Multi | Security) Welche Aussagen zur Sicherheit (Security) sind korrekt?;Integrität bezieht sich darauf, dass Daten während ihrer Lebensdauer zuverlässig und richtig (reliable and accurate) sein müssen.;Daten zu verschlüsseln ist eine Möglichkeit, die Vertraulichkeit (confidentiality) der Daten sicherzustellen.;Daten zu verschlüsseln ist eine Möglichkeit, die Integrität (integrity) der Daten sicherzustellen.;Vertraulichkeit ist dazu da, um Daten vor dem Zugriff durch nicht berechtigte dritte Parteien zu beschützen.;;-1;;
(71 | Multi | Message integrity) Worin unterscheiden sich Nachrichten-Authentifizierungscode (Message Authentication Code, MAC) und Hash-Funktionen?;Wenn man einen Nachrichten Authentifizierungscode (MAC) verwendet, wird die Nachricht erst verschlüsselt, und dann gehasht.;Wenn man einen Nachrichten Authentifizierungscode (MAC) verwendet, wird die Nachricht und ein geheimer geteilter Schlüssel gehasht, um die Integrität sicherzustellen.;Wenn man eine normale Hash-Funktion auf eine Nachricht anwendet, kann die Nachricht daraus nicht rekonstruiert werden, aus einem MAC auf eine Nachricht angewendet aber schon.;Hashes, die von MAC Funktionen generiert werden, sind viel kleiner als Hashes von regulären Hash-Funktionen, und somit besser zur Übertragung über Netzwerke geeignet.;;-1;;
(72 | Multi | Message integrity) Welche Aussagen über Nachrichten-Authentifizierungscodes (Message Authentication Code, MAC) sind korrekt?;Eine Nachricht wird zuerst mit einem geteilten Schlüssel verschlüsselt, und dann überträgt man die originale Nachricht selbst, gemeinsam mit dem entstehenden Cipher-Text.;Eine Nachricht wird zuerst verschlüsselt und gehasht, und dann überträgt man die originale Nachricht gemeinsam mit diesem Hash.;Eine Nachricht und ein geteilter Schlüssel wird gehasht, und dann überträgt man die originale Nachricht gemeinsam mit diesem Hash.;Eine Nachricht und der öffentliche Schlüssel des Empfängers werden gehasht, und dann überträgt man die originale Nachricht gemeinsam mit diesem Hash.;;-1;;
