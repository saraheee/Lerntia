(34) Welche Aussagen über Kanonische Überdeckungen (KÜ) sind richtig?;Manche Mengen von FDs haben keine Kanonische Überdeckung.;Wenn sie existiert, ist die KÜ einer Menge von FDs eindeutig.;Eine Menge von FDs kann mehrere äquivalente KÜs haben.;Es kann in einer KÜ mehrere FDs mit der gleichen linken Seite geben.;Keine der genannten Antworten.;3;;Bei der Kanonische Überdeckung KÜ handelt es sich um eine minimale Darstellung der Funktionalen Abhängigkeiten FDs. .... Für jede Menge an Funktionalen Abhängigkeiten existiert also auch eine KÜ. Wenn es keine Redundanzen in ihrer Darstellung mehr gibt, handelt es sich bereits um eine KÜ, wenn nicht, können diese Redundanzen durch Linksreduktion und Rechtsreduktion entfernt werden, um eine KÜ zu erhalten. .... Eine KÜ ist nicht eindeutig, da das Ergebnis davon abhängen kann, in welcher Reihenfolge man die FDs in den Reduktionsschritten entfernt. .... Für die selbe Menge an FDs kann es somit unterschiedliche KÜs geben, die aber wohlgemerkt alle minimal sind, was bedeutet, dass man nichts mehr entfernen kann, ohne ihre Hülle zu verändern. .... Der erste Schritt vor der Linksreduktion ist die Dekomposition, dabei werden alle FDs so aufgespalten, dass immer nur ein Attribut auf der rechten Seite übrig bleibt. Am Schluss werden die verbleibenden FDs wieder mittels Vereinigungsregel zusammengefasst, sodass jede linke Seite nur einmal vorkommt, um die KÜ kompakter darzustellen.
(35) Welche Aussagen über die Berechnung von KÜs sind richtig?;Der erste Schritt ist die Vereinigung, um die rechten Seite aufzuspalten.;Bei der Linksreduktion können sowohl FDs hinzugefügt und entfernt werden.;Bei der Rechtsreduktion werden, wenn angewandt, einzelne Attribute entfernt.;Bei der Rechtsreduktion werden, wenn angewandt, ganze FDs entfernt.;Keine der genannten Antworten.;4;;Die vier Schritte zur Berechnung der Kanonischen Überdeckung sind: Dekomposition, Linksreduktion, Rechtsreduktion, und Vereinigung, in dieser Reihenfolge. .... Bei der Dekomposition werden die rechten Seiten der FDs aufgespalten, sodass jede übrig bleibende FD die Form alpha -> B hat, also nur ein Attribut auf der rechten Seite, bei beliebiger linker Seite. .... Bei der Linksreduktion werden werden keine FDs hinzugefügt oder entfernt. .... Es wird überprüft, ob sich der rechte Teil, also B, auch dann herleiten lässt, wenn die linke Seite, alpha, weniger Attribute enthält. .... Dazu versucht man, ein Attribut der linken Seite zu entfernen, und überprüft dann, ob B immer noch in der Hülle der neuen, gekürzen linken Seite enthalten ist. .... Wenn ja, war dieses Attribut redundant und darf entfernt werden. Es werden in diesem Schritt also weder neue FDs eingefügt, noch bestehende FDs entfernt. .... Bei der Rechtsreduktion wird überprüft, ob eine FD selbst redundant ist, also, ob die Hülle der restlichen FDs äquivalent bleibt, wenn diese FD entfernt wird. .... Wenn ja, war sie redundant und kann entfernt werden. Es werden in diesem Schritt also, wenn es möglich ist, ganze FDs entfernt, aber keine einzelnen Attribute. .... Und am Schluss werden mittels Vereinigungsregel alle rechten Seiten, die die gleichen linken Seiten haben, zusammengefasst. 
(36) Bei welchen Mengen von FDs im Bild kann es sich um KÜs handeln?;Menge 1 ist eine Kanonische Überdeckung.;Menge 2 ist eine Kanonische Überdeckung.;Menge 3 ist eine Kanonische Überdeckung.;Menge 4 ist eine Kanonische Überdeckung.;Keine der genannten Antworten.;1;36.png;1. Richtig, das ist eine Kanonische Überdeckung. Eine erneute einfache Berechnung der KÜ zeigt, dass sich nichts mehr vereinfachen oder streichen lässt. .... 2. Falsch. Bei der ersten Menge wurde die Vereinigung nicht richtig durchgeführt, da es zwei FDs gibt, die die gleiche linke Seite haben. .... 3. Falsch. Hier gibt es auf den ersten Blick noch Redundanzen durch AB?C, A?C und B?C . Bei der Linksreduktion würden A?C und B?C erhalten bleiben, aber AB?C könnte man noch kürzen, sogar auf zwei Arten. Man kann A kürzen, weil C dann immer noch in der Hülle von B enthalten ist, oder B, weil C dann immer noch in der Hülle von A enthalten ist. Hier wurde also die Linksreduktion nicht vollständig durchgeführt. .... 4. Falsch. Hier wurde eine Dekomposition durchgeführt, alle rechten Seiten enthalten nur ein Attribut, eine Linksreduktion, keine der linken Seiten kann noch irgendwie gekürzt werden, aber die Rechtsreduktion wurde noch nicht durchgeführt, da es noch Redundanzen gibt. Die ersten drei Regeln, A -> B, B -> C und C -> D können nicht vereinfacht werden, aber die vierte Regel ist redundant, denn, wenn man diese Regel streichen würde, bleibt die rechte Seite, also D, immer noch in der Hülle der linken Seite, A, erhalten. 
(37) Berechne eine Kanonische Überdeckung zum Bild. Welche Schritte wären in einer Linksreduktion erlaubt?;Aus AC -> E kann man AC -> A machen.;Aus AC -> E kann man A -> E machen.;CD -> E kann man gar nicht vereinfachen.;Aus CD -> E kann man C -> E machen.;Keine der genannten Antworten.;2;37.png;Nur Antwort zwei stimmt. Um eine Linksreduktion durchzuführen, versuchen wir, eines der Attribute auf der linken Seite der FD zu streichen, und überprüfen dann, ob die rechte Seite immer noch in der Hülle der Attribute der verbliebenen linken Seite enthalten ist. .... ACHTUNG: Zur Berechnung der Hülle nimmt man immer die alten FDs, vom Anfang oder vom jeweils vorigen Schritt, aber nicht nicht die, die man gerade ändern möchte. .... Formal: Sei eine FD: alpha -> B . Dann finde die Hülle AttrHülle(F, alpha - A) . Und schau, ob die rechte Seite in dieser Hülle enthalten ist. B e  AttrHülle(F, alpha - A) . .... Wenn ja, ist die Kürzung OK, und die FD wird in ihrer neuen Form mit gestrichenem Attribut Teil der Menge. Wenn nein, ist die Kürzung verboten, da sonst Information verloren geht. .... Antwort 1 macht gar keinen Sinn, das ist keine Linksreduktion. Antwort 2 ist richtig. Man muss die Hülle der neuen linken Seite berechnen, in diesem Fall A, und die ist AttrHülle(F, A) = ABDCE, Attribut E ist also enthalten. Antwort 3 ist falsch, man kann CD -> E ebenfalls vereinfachen. Antwort 4 ist falsch, es ist genau die andere erlaubt, also D -> E, aber nicht C? E. Wir berechnen ebenfalls wieder die Hülle der neuen linken Seite, und überprüfen, ob die rechte Seite darin enthalten ist oder nicht. Wenn man D streicht, braucht man die Hülle von C, und die ist AttrHülle(F, C) = C. Wenn man C streicht, braucht man die Hülle von D, und die ist AttrHülle(F, D) = DCE. .... Das Attribut E ist in der Hülle von D, aber nicht in der von C, enthalten, also darf man nur C streichen und erhält D -> E.
(38) Welche Aussagen zu dieser Rechtsreduktion im Bild sind richtig?;A -> B kann gestrichen werden.;Die Rechtsreduktion wurde bereits durchgeführt, man kann nichts mehr machen.;A -> E kann gestrichen werden.;A -> D kann gestrichen werden.;Keine der genannten Antworten.;3;38.png;Bei der Rechtsreduktion versucht man, jeweils die ganze FD zu streichen, und Überprüft dann, ob die rechte Seite immer noch in der Hülle der linken Seite enthalten ist, wenn man diese Regel streicht. .... Antwort zwei ist falsch, man kann noch etwas machen, und zwar: .... Wenn man A -> B streiche möchte, muss man die Hülle von A ohne diese Regel berechnen, und die ist AttrHülle(F', A) = ADEC. Anders gesagt, man kann B nicht mehr von A ableiten. B ist nicht enthalten, also ist die Streichung verboten. .... Man hätte auch bereits sehen können, dass B nur hier auf der rechten Seite vorkommt, es kann also keine andere Möglichkeit geben, um B herzuleiten. .... Wenn man A -> E streiche möchte, muss man die Hülle von A ohne diese Regel berechnen, und die ist AttrHülle(F', A) = ABDEC, also in diesem Fall sogar das komplette Schema. B ist enthalten, also ist die Streichung OK. .... Für A -> D gilt das gleiche wie für A -> B. .... Somit ist A -> E die einzige Operation, die man hier durchführen darf.
(39) Welche Aussagen zu Schlüsseln sind richtig?;Ein Schlüssel bestimmt das ganze Schema.;Jeder Superschlüssel ist auch ein Schlüssel.;Jeder Schlüssel muss minimal sein.;Ein Schlüssel ist minimal, wenn er aus genau einem Attribut besteht.;Keine der genannten Antworten.;13;;Ja, ein Schlüssel bestimmt alle Attribute des Schemas. .... Nein, es ist anders herum, jeder Schlüssel ist auch ein Superschlüssel, aber nicht umgekehrt. .... Ja, ein Schlüssel muss minimal sein, sonst ist er nämlich ein Superschlüssel und kein Schlüssel. Minimal heißt aber, dass sich kein Attribut mehr entfernen lässt, wobei der gekürzte Schlüssel dann immer noch das komplette Schema bestimmt. Alle Attribute, die nicht auf der rechten Seite vorkommen, müssen Teil des Schlüssels sein, da sie sonst nie Teil einer Hülle sein können. .... Um einen Schlüssel zu bestimmen, kann man erst einen Trivialen Superschlüssel bestimmen, der aus dem ganzen Schema besteht, und dann Attribute kürzen, bis sich nichts mehr kürzen lässt.
(40) Welcher Aussagen über mögliche Schlüssel dieses Schemas sind richtig?;AE ist ein Superschlüssel.;D ist ein Schlüssel.;AD ist ein Schlüssel.;Dieses Schema hat keine Schlüssel.;Keine der genannten Antworten.;12;40.png;Ja, AE ist ein Superschlüssel, weil die Hülle von AE das ganze Schema ist. Über AE -> B kommt B dazu, mit AB -> DE bekommt man DE, und mit D -> ABC schlussendlich auch noch C. .... Ja, D ist ein Schlüssel, D bestimmt das ganze Schema, über D -> ABC bekommt man ABCD, und mit AB -> DE auch noch E. Außerdem muss D minimal sein, das gibt es nichts mehr, das man kürzen könnte. .... Nein, AD kann kein Schlüssel mehr sein, weil D ja bereits ein Schlüssel war, und AD somit nicht mehr minimal sein kann, man kann noch das A streichen. .... Antwort vier macht keinen Sinn, jedes Schema muss einen Schlüssel haben, jedes Schema hat zumindest einen offensichtlichen trivialen Superschlüssel, nämlich das ganze Schema selbst, und dann kann man entweder etwas kürzen, oder nicht, aber man erhält auf jeden Fall einen Schlüssel.
(41) Welche Attribute bilden den zweiten Schlüssel, wenn CD bereits bekannt ist?;A.;B.;C.;D.;E.;13;41.png;Es gibt genau zwei Schlüssel in diesem Schema, nämlich CD und AC. .... Berechnung: Wenn man einen Schlüssel bereits kennt, kann man überprüfen, ob sich ein Teil durch einen anderen ersetzen lässt. Kommt ein Attribute eines Schlüssels irgendwo auf der rechten Seite vor, dann kann man dieses Attribut auch durch die linke Seite dieser Regel ausdrücken. .... In diesem Beispiel ist der Schlüssel CD schon bekannt. Überprüfe, ob man C durch etwas Anderes ersetzen kann. Nein, weil es nur auf der linken Seite vorkommt. Überprüfe, ob man D durch etwas Anderes ersetzen kann. Ja, es gilt nämlich AE -> D, also kann man D durch AE ersetzen. .... Unser nächster Schlüsselkandidat ist somit AEC, allerdings wissen wir noch nicht, ob er auch minimal ist, daher müssen wir überprüfen, ob sich etwas streichen lässt, und danach immer noch das komplette Schema bestimmt. .... C lässt sich sicher nicht streichen, weil es nirgendwo auf der rechten Seite vorkommt. .... Versuche es mit A, bleibt CE, die Hülle von CE ist AttrHülle(FCES) = CE, also lässt sich nicht mehr das ganze Schema bestimmen. .... Versuche es mit E, bleibt AC, die Hülle von AC ist AttrHülle(F,AC) = ACBED, also das komplette Schema, somit ist AC der zweite Schlüssel. .... Da C immer Teil des Schlüssels sein muss, weil es nicht auf der rechten Seite vorkommt, bleiben nur mehr vier mögliche Kombinationen von zwei Attributen, und eine davon war vorgegeben, man könnte also auch einfach die anderen drei überprüfen, aber dann übt man nicht, wie man Schlüssel aus bestehenden Schlüsseln berechnet.
